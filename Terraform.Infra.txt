provider "aws" {
  region = "ap-south-1"
}
resource "aws_vpc" "dev_vpc" {                   
  cidr_block       = "10.0.0.0/16"
  instance_tenancy = "default"

  tags = {
    Name = "DEV-VPC"                           
  }
}
resource "aws_subnet" "devpubsub" {               
  vpc_id     = aws_vpc.dev_vpc.id                 
  cidr_block = "10.0.1.0/24"
  availability_zone = "ap-south-1a"

  tags = {
    Name = "DEV-PUBLIC-SUBNET"                              
  }
}
resource "aws_subnet" "devprisub" {               
  vpc_id     = aws_vpc.dev_vpc.id                 
  cidr_block = "10.0.2.0/24"
  availability_zone = "ap-south-1b"

  tags = {
    Name = "DEV-PRIVATE-SUBNET"                
  }
}
resource "aws_security_group" "dev_pub_sg" {      
  name        = "allow_all_pub"
  description = "Allow TLS inbound traffic"
  vpc_id      = aws_vpc.dev_vpc.id                

  ingress {
    description      = "TLS from VPC"
    from_port        = 0
    to_port          = 65535
    protocol         = "tcp"
    cidr_blocks      = ["0.0.0.0/0"]
  }

  egress {
    from_port        = 0
    to_port          = 0
    protocol         = "-1"
    cidr_blocks      = ["0.0.0.0/0"]
  }

  tags = {
    Name = "DEV-PUBLIC-SUBNET-SECGRP"          
  }
}
resource "aws_security_group" "dev-pri-sg" {     
  name        = "allow_all_pri"
  description = "Allow TLS inbound traffic from Public Subnet"
  vpc_id      = aws_vpc.dev-vpc.id                

  ingress {
    description      = "TLS from VPC"
    from_port        = 0
    to_port          = 65535
    protocol         = "tcp"
    cidr_blocks      = ["10.0.1.0/24"]
  }

   egress {
    from_port        = 0
    to_port          = 0
    protocol         = "-1"
    cidr_blocks      = ["0.0.0.0/0"]
  }

  tags = {
    Name = "DEV-PRIVATE-SUBNET-SECGRP"             
  }
}
resource "aws_internet_gateway" "dev_ig" {         
  vpc_id = aws_vpc.dev_vpc.id                      

  tags = {
    Name = "DEV_INTERNET-GATEWAY"                  
  }
}
resource "aws_route_table" "dev_pubrt" {            
  vpc_id = aws_vpc.dev_vpc.id                       

  route {
    cidr_block = "0.0.0.0/0"
    gateway_id = aws_internet_gateway.dev_ig.id      
  }
  tags = {
    Name = "DEV-PUBLIC-ROUTE-TABLE"                   
  }
}
resource "aws_route_table_association" "dev_pubsub-rtasso" {     
  subnet_id      = aws_subnet.devpubsub.id                        
  route_table_id = aws_route_table.dev_pubrt.id                   
}
resource "aws_eip" "dev_eip" {                                    
  vpc      = true
}
resource "aws_nat_gateway" "dev_nat" {                            
  allocation_id = aws_eip.dev_eip.id                              
  subnet_id     = aws_subnet.devprisub.id                         

  tags = {
    Name = "DEV-NAT-GATEWAY"                                    
  }
}
resource "aws_route_table" "dev_prirt" {                             
  vpc_id = aws_vpc.dev_vpc.id                                        

  route {
    cidr_block = "0.0.0.0/0"
    gateway_id = aws_nat_gateway.dev_nat.id                         
  }
  tags = {
    Name = " DEV-PRIVATE-ROUTE-TABLE"                               
  }
}
resource "aws_route_table_association" "dev_prisub_rtasso" {        
  subnet_id      = aws_subnet.devprisub.id                          
  route_table_id = aws_route_table.dev_prirt.id                      
}
resource "aws_instance" "pub_instance" {
  ami                                 = "ami-052cef05d01020f1d"
  instance_type                       = "t2.micro"
  availability_zone                   = "ap-south-1a"
  associate_public_ip_address         = "true"
  vpc_security_group_ids              = [aws_security_group.deep_pub_sg.id]
  subnet_id                           = aws_subnet.deeppubsub.id
  key_name                            = "terraform-Key"
  
    tags = {
    Name = "DEV-PUBLIC-SUBNET-INSTANCE"
  }
}
resource "aws_instance" "pri_instance" {
  ami                                   = "ami-052cef05d01020f1d"
  instance_type                         = "t2.micro"
  availability_zone                     = "ap-south-1b"
  associate_public_ip_address           = "false"
  vpc_security_group_ids                = [aws_security_group.dev_pri_sg.id]
  subnet_id                             = aws_subnet.devprisub.id
  key_name                              = "terraform-Key"
  
    tags = {
    Name = "DEV-PRIVATE-SUBNET-INSTANCE"

